---
- name: Template the kubeadm configuration file
  debug:
    msg: "{{ lookup('template', './kubeadm.j2') }}"

- name: Template the kubeadm configuration file
  template:
    src: kubeadm.j2
    dest: /home/ec2-user/kubeadm.yaml

- name: Calico Networking configuration
  copy:
    src: ../calico.yaml
    dest: /home/ec2-user

- name: check if there is already a master initiated
  shell: |
     kubectl --kubeconfig ~/.kube/config get componentstatuses | grep controller-manager | awk '{print $2}'
  register: kube_init_status

- name: Start the containerd daemon
  shell: |
    systemctl daemon-reload
    systemctl start containerd

- name: Start the containerd daemon
  shell: |
    systemctl daemon-reload
    systemctl start kubelet

- name: Reset Kubernetes component
  shell: "kubeadm reset --force --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock"
  register: reset_cluster
  when: kube_init_status.stdout != "Healthy"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create Kubernetes certs directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/kubernetes/pki"
    - "/etc/kubernetes/pki/etcd"

- name: Copy External ETCD Certs to K8S Master
  copy:
    src: "{{ ansible_home }}/files/etcdcerts/ca.{{ item }}"
    dest: "/etc/kubernetes/pki/etcd/ca.{{ item }}"
    mode: 0755
  with_items:
    - key
    - crt
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy External ETCD Client Certs to K8S Master
  copy:
    src: "{{ ansible_home }}/files/etcdcerts/etcd-client.{{ item }}"
    dest: "/etc/kubernetes/pki/apiserver-etcd-client.{{ item }}"
    mode: 0755
  with_items:
    - key
    - crt
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy k8s CA, Front Proxy CA and client Certs to K8S Master
  copy:
    src: "{{ ansible_home }}/files/kubecerts/{{ item }}.key"
    dest: "/etc/kubernetes/pki/{{ item }}.key"
    mode: 0755
  with_items:
    - ca
    - front-proxy-ca
    - front-proxy-client
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy k8s Front Proxy CA and Client Certs to K8S Master
  copy:
    src: "{{ ansible_home }}/files/kubecerts/{{ item }}.crt"
    dest: "/etc/kubernetes/pki/{{ item }}.crt"
    mode: 0755
  with_items:
    - ca
    - front-proxy-ca
    - front-proxy-client
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy k8s Client Key Pair to K8S Master
  copy:
    src: "{{ ansible_home }}/files/kubecerts/{{ item }}"
    dest: "/etc/kubernetes/pki/{{ item }}"
    mode: 0755
  with_items:
    - sa.key
    - sa.pub
  ignore_errors: "{{ ansible_check_mode }}"
  
- name: Cluster Initialization
  shell: |
   kubeadm init --config=/home/ec2-user/kubeadm.yaml
   sleep 30
   export KUBECONFIG=/etc/kubernetes/admin.conf
   kubectl apply -f calico.yaml
  register: init_cluster
  when: kube_init_status.stdout != "Healthy"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory
  when: kube_init_status.stdout != "Healthy"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy admin.conf to Home directory
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true
  when: kube_init_status.stdout != "Healthy"
  ignore_errors: "{{ ansible_check_mode }}"
